// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Todos.Models;

namespace Todos.Migrations
{
    [DbContext(typeof(TodoContext))]
    [Migration("20181101174707_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Todos.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Todos");

                    b.HasData(
                        new { Id = 1, Name = "Take out garbage" },
                        new { Id = 2, Name = "Clean the mug" },
                        new { Id = 3, Name = "Vacuum" },
                        new { Id = 4, Name = "Wash the whiteboards" }
                    );
                });

            modelBuilder.Entity("Todos.Models.TodoTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TodoId");

                    b.Property<int>("TopicId");

                    b.HasKey("Id");

                    b.HasIndex("TodoId");

                    b.HasIndex("TopicId");

                    b.ToTable("TodoTopics");

                    b.HasData(
                        new { Id = 1, TodoId = 1, TopicId = 2 },
                        new { Id = 2, TodoId = 2, TopicId = 1 },
                        new { Id = 3, TodoId = 2, TopicId = 2 },
                        new { Id = 4, TodoId = 3, TopicId = 2 },
                        new { Id = 5, TodoId = 4, TopicId = 1 },
                        new { Id = 6, TodoId = 4, TopicId = 2 }
                    );
                });

            modelBuilder.Entity("Todos.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Topics");

                    b.HasData(
                        new { Id = 1, Title = "Work" },
                        new { Id = 2, Title = "Home" }
                    );
                });

            modelBuilder.Entity("Todos.Models.TodoTopic", b =>
                {
                    b.HasOne("Todos.Models.Todo", "Todo")
                        .WithMany("TodoTopics")
                        .HasForeignKey("TodoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Todos.Models.Topic", "Topic")
                        .WithMany("TodoTopics")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
